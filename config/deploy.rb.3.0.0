set :domain, 'api.parlamento.datauy.org'
set :application, 'api_parlamento'

set :repo_url, 'git@github.com:uruguay-pais/api-parlamento.git'
ask :branch, 'master'
set :scm, :git
set :git_shallow_clone, 1


set :user, 'deploy'
set :use_sudo, false
set :deploy_to, '/var/www/apps/api_parlamento'

set :format, :pretty
set :log_level, :debug
set :pty, true

# set :linked_dirs, %w{bin log tmp/pids tmp/cache tmp/sockets vendor/bundle public/system}

# set :default_env, { path: "/opt/ruby/bin:$PATH" }
set :keep_releases, 5

set :ssh_options, { :forward_agent => true }

namespace :deploy do

  task :start do ; end
  task :stop do ; end

  task :finalize update, :except => { :no_release => true } do
   run "chmod -R g+w #{latest_release}" if fetch(:group_writable, true)
   run <---CMD
   CMD
  end

  desc 'Restart application'
  task :restart do
    on roles(:app), in: :sequence, wait: 5 do
      # Your restart mechanism here, for example:
      execute :touch, release_path.join('tmp/restart.txt')
    end
  end

  after :restart, :clear_cache do
    on roles(:web), in: :groups, limit: 3, wait: 10 do
      # Here we can do anything such as:
      within release_path do
        execute :rake, 'cache:clear'
      end
    end
  end

  after :finishing, 'deploy:cleanup'

end
